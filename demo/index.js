
import { Con, Row, Col } from 'bee-layout';
import { Panel } from 'bee-panel';
import Button from 'bee-button';
import React, { Component } from 'react';
import ReactDOM from 'react-dom';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var DemoArray = [{"example":<Demo1 />,"title":" 单个input校验","code":"/**\r\n *\r\n * @title 单个input校验\r\n * @description 使用FormItem\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Form, Label, FormControl } from 'tinper-bee';\r\n\n\nconst FormItem = Form.FormItem;\r\n\r\n\r\nconst Demo1 = Form.createForm()(class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const self=this;\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        return (\r\n                <FormItem className='demo1'>\r\n                    <Label>姓名</Label>\r\n                    <FormControl placeholder='请输入姓名'\r\n                     {...getFieldProps('name', {\r\n                        validateTrigger: 'onBlur',\r\n                        rules: [{\r\n                            required: true, message: '请输入姓名'\r\n                        },{\r\n                            max:5,message:'最大长度为10'\r\n                        },{\r\n                            pattern: /[\\u4e00-\\u9fa5]/, message: '请输入中文字符',\r\n                        }],\r\n                    }) } />\r\n                    <span className='error'>\r\n                        {getFieldError('name')}\r\n                    </span>   \r\n                </FormItem>\r\n        )\r\n    }\r\n})\r\n\r\n","desc":" 使用FormItem","scss_code":".demo1 {\r\n    font-size: 14px;\r\n    .u-form-item {\r\n        min-height: auto!important;\r\n    }\r\n    .u-label {\r\n        display: inline;\r\n        padding-right: 12px;\r\n    }\r\n    .u-form-control {\r\n        width: auto;\r\n    }\r\n    .error {\r\n        font-size: 12px;\r\n        color: red;\r\n        margin-left: 10px;\r\n    }\r\n}"},{"example":<Demo2 />,"title":" 基本form校验","code":"/**\r\n *\r\n * @title 基本form校验\r\n * @description 登录示例\r\n */\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Icon, Button, Label, FormControl } from 'tinper-bee';\r\n\n\n\n\nconst FormItem = Form.FormItem;\r\n\r\nconst Demo2 = Form.createForm()(class Demo2 extends Component {\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (err) {\r\n                console.log('校验失败', values);\r\n            } else {\r\n                console.log('提交成功', values)\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        return (\r\n            <div className=\"demo2\">\r\n                <Form >\r\n                    <FormItem>\r\n                        <Label>用户名</Label>\r\n                        <FormControl placeholder=\"请输入用户名\"\r\n                            {...getFieldProps('username', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入用户名',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('username')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>密码</Label>\r\n                        <FormControl placeholder=\"请输入密码\" type='password'\r\n                            {...getFieldProps('password', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入密码',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('password')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <div className='submit'>\r\n                        <Button colors=\"primary\" className=\"login\" onClick={this.submit}>登录</Button>\r\n                        <Button shape=\"border\" className=\"reset\">取消</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n","desc":" 登录示例","scss_code":".demo2 {\r\n    font-size: 14px;\r\n    .u-label {\r\n        display: inline-block;\r\n        min-width: 80px;\r\n        text-align: right;\r\n        padding-right: 12px;\r\n    }\r\n    .u-form-control {\r\n        width: auto;\r\n    }\r\n    .error {\r\n        font-size: 12px;\r\n        color: red;\r\n        margin-left: 10px;\r\n    }\r\n    .submit {\r\n        padding-left: 90px;\r\n    }\r\n    .submit .login {\r\n        margin-right: 10px;\r\n    }\r\n    .u-form-item {\r\n        min-height: auto!important;\r\n    }\r\n}"},{"example":<Demo3 />,"title":" 基本form校验","code":"/**\r\n *\r\n * @title 基本form校验\r\n * @description 注册示例\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Form, Label, Checkbox, Button, FormControl } from 'tinper-bee';\r\nconst FormItem = Form.FormItem;\r\n\n\n\n\n\r\nconst Demo3 = Form.createForm()( class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkbox: false\r\n        }\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (err) {\r\n                console.log('校验失败', values);\r\n            } else {\r\n                console.log('提交成功', values)\r\n            }\r\n        });\r\n    }\r\n    handleConfirmPassword = (rule, value, callback) => {\r\n        const { getFieldValue } = this.props.form;\r\n        if (value && value !== getFieldValue('password')) {\r\n            callback('两次输入不一致！')\r\n        }\r\n        callback();\r\n    }\r\n    render() {\r\n        const self = this;\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        return (\r\n            <div className=\"demo3\">\r\n                <Form>\r\n                    <FormItem>\r\n                        <Label>用户名</Label>\r\n                        <FormControl placeholder=\"请输入用户名(包含数字和字母，8-15位)\"\r\n                            {...getFieldProps('username', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入用户名',\r\n                                }, {\r\n                                    pattern: /^(?!\\d+$)(?![a-zA-Z]+$)[a-zA-Z0-9]{8,15}$/, message: '用户名格式错误',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('username')}\r\n                        </span>\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        <Label>密码</Label>\r\n                        <FormControl placeholder=\"请输入密码\" type='password'\r\n                            {...getFieldProps('password', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入密码',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('password')}\r\n                        </span>\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        <Label>再次输入密码</Label>\r\n                        <FormControl placeholder=\"请输入密码\" type='password'\r\n                            {...getFieldProps('password2', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入密码',\r\n                                }, {\r\n                                    validator: this.handleConfirmPassword\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('password2')}\r\n                        </span>\r\n                    </FormItem>\r\n\r\n                    <FormItem>\r\n                        <Label>邮箱</Label>\r\n                        <FormControl placeholder=\"请输入邮箱\"\r\n                            {...getFieldProps('email', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入邮箱',\r\n                                }, {\r\n                                    type: 'email', message: '邮箱格式不正确'\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('email')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>手机号</Label>\r\n\r\n                        <FormControl placeholder=\"请输入手机号\"\r\n                            {...getFieldProps('phone', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入手机号',\r\n                                }, {\r\n                                    pattern: /^\\d{11}$/, message: '手机号格式不正确'\r\n                                }],\r\n                            }) }\r\n                        />\r\n\r\n                        <span className='error'>\r\n                            {getFieldError('phone')}\r\n                        </span>\r\n                    </FormItem>\r\n\r\n                    <FormItem style={{'paddingLeft':'110px'}}>\r\n                        <Checkbox\r\n                            defaultChecked={this.state.checkbox}\r\n                            {\r\n                            ...getFieldProps('checkbox', {\r\n                                initialValue: false,\r\n                            }\r\n                            ) }\r\n                        >\r\n                        我已经阅读并同意相关条款\r\n                        </Checkbox>\r\n                    </FormItem>\r\n                    <div className='submit'>\r\n                        <Button colors=\"primary\" className=\"login\" onClick={this.submit}>注册</Button>\r\n                        <Button shape=\"border\" className=\"reset\">取消</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n","desc":" 注册示例","scss_code":".demo3 {\r\n    font-size: 14px;\r\n    .u-label {\r\n        display: inline-block;\r\n        min-width: 105px;\r\n        text-align: right;\r\n        padding-right: 12px;\r\n    }\r\n    .u-form-control {\r\n        width: auto;\r\n        min-width: 300px;\r\n    }\r\n    .error {\r\n        font-size: 12px;\r\n        color: red;\r\n        margin-left: 10px;\r\n    }\r\n    .submit {\r\n        padding-left: 110px;\r\n    }\r\n    .submit .login {\r\n        margin-right: 10px;\r\n    }\r\n    .u-form-item {\r\n        min-height: auto!important;\r\n    }\r\n}"},{"example":<Demo4 />,"title":" 表单校验","code":"/**\r\n *\r\n * @title 表单校验\r\n * @description 用户信息录入实例\r\n */\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Button, Label, CitySelect, Rate, InputNumber, Slider, Switch, Checkbox, DatePicker, Radio, Select, FormControl } from 'tinper-bee';\r\n\n\n\n\n\n\n\n\n\n\n\n\nconst FormItem = Form.FormItem;\r\nconst Option = Select.Option;\r\n\r\nconst Demo4 = Form.createForm()(class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedValue: 'man',\r\n        };\r\n    }\r\n    submit = (e) => {\r\n        this.props.form.validateFields((err, values) => {\r\n            if (err) {\r\n                console.log('校验失败', values);\r\n            } else {\r\n                console.log('提交成功', values)\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        const self = this;\r\n        return (\r\n            <div>\r\n                <Form className='demo4'>\r\n                    <FormItem>\r\n                        <Label>姓名</Label>\r\n                        <FormControl placeholder=\"请输入姓名\"\r\n                            {...getFieldProps('name', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入姓名',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('name')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>身份证号</Label>\r\n                        <FormControl placeholder=\"请输入身份证号\"\r\n                            {...getFieldProps('id', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入身份证号',\r\n                                },{\r\n                                    pattern: /^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/, message: '身份证号格式不正确'\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('id')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem className='time'>\r\n                        <Label>出生日期</Label>\r\n                        <DatePicker\r\n                            {\r\n                            ...getFieldProps('time', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请选择出生日期',\r\n                                }, {\r\n                                    type: 'date', message: '日期格式不正确'\r\n                                }],\r\n                            }\r\n                            ) }\r\n                            placeholder={'请选择出生日期'}\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('time')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>年龄</Label>\r\n                        <FormControl placeholder=\"请输入年龄\"\r\n                            {...getFieldProps('age', {\r\n                                validateTrigger: 'onBlur',\r\n                                rules: [{\r\n                                    required: true, message: '请输入年龄',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                        <span className='error'>\r\n                            {getFieldError('age')}\r\n                        </span>\r\n                    </FormItem>\r\n                     <FormItem>\r\n                        <Label>性别</Label>\r\n                        <Radio.RadioGroup\r\n                            selectedValue={this.state.selectedValue}\r\n                            {\r\n                            ...getFieldProps('sex', {\r\n                                initialValue: 'man',\r\n                                onChange(value) {\r\n                                    self.setState({ selectedValue: value });\r\n                                },\r\n                                rules: [{ required: true }]\r\n                            }\r\n                            ) }\r\n                        >\r\n                            <Radio value=\"man\" >男</Radio>\r\n                            <Radio value=\"woman\" >女</Radio>\r\n                        </Radio.RadioGroup>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>学历</Label>\r\n                        <Select\r\n                            {\r\n                            ...getFieldProps('education', {\r\n                                initialValue: '',\r\n                                rules: [{ required: true, message: '请选择学历' }]\r\n                            }\r\n                            ) }\r\n                        >\r\n                            <Option value=\"\">请选择</Option>\r\n                            <Option value=\"nothing\">无</Option>\r\n                            <Option value=\"middle\">初中</Option>\r\n                            <Option value=\"senior\">高中</Option>\r\n                            <Option value=\"college1\">专科</Option>\r\n                            <Option value=\"college2\">本科</Option>\r\n                            <Option value=\"graduate\">研究生及以上</Option>\r\n                            <Option value=\"other\">其它</Option>\r\n                        </Select>\r\n                        <span className='error'>\r\n                            {getFieldError('education')}\r\n                        </span>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Label>保密等级</Label>\r\n                        <Rate\r\n                            {\r\n                            ...getFieldProps('rate', {\r\n                                initialValue: 0,\r\n                                rules: [{ required: true }]\r\n                            }\r\n                            ) }\r\n                        />\r\n                    </FormItem>\r\n                    <FormItem className=\"remarks\">\r\n                        <Label>备注</Label>\r\n                        <FormControl componentClass='textarea'\r\n                            {\r\n                            ...getFieldProps('remark', {}\r\n                            ) }\r\n                        />\r\n                    </FormItem>  \r\n                    \r\n\r\n\r\n                    <div className='submit'>\r\n                        <Button colors=\"primary\" className=\"login\" onClick={this.submit}>提交</Button>\r\n                        <Button shape=\"border\" className=\"reset\">取消</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n","desc":" 用户信息录入实例","scss_code":".demo4 {\r\n    font-size: 14px;\r\n    .u-label {\r\n        display: inline-block;\r\n        min-width: 100px;\r\n        text-align: right;\r\n        padding-right: 12px;\r\n    }\r\n    .u-form-control {\r\n        width: auto;\r\n        min-width: 380px;\r\n    }\r\n    .error {\r\n        font-size: 12px;\r\n        color: red;\r\n        margin-left: 10px;\r\n    }\r\n    .submit {\r\n        padding-left: 110px;\r\n    }\r\n    .submit .login {\r\n        margin-right: 10px;\r\n    }\r\n    .u-select {\r\n        max-width: 380px;\r\n    }\r\n    textarea {\r\n        min-height: 100px;\r\n        resize: none;\r\n    }\r\n    .time>div {\r\n        display: inline-block;\r\n    }\r\n    .time .u-label {\r\n        position: relative;\r\n        bottom: 10px;\r\n    }\r\n    .time .error{\r\n        position: relative;\r\n        bottom: 10px;\r\n    }\r\n    .remarks .u-label{\r\n        position: relative;\r\n        bottom: 79px;\r\n    }\r\n    .u-city-select {\r\n        display: inline-block;\r\n    }\r\n    .u-city-select .province,\r\n    .u-city-select .city,\r\n    .u-city-select .area {\r\n        width: 120px;\r\n    }\r\n    .u-form-item {\r\n        min-height: auto!important;\r\n    }\r\n}"},{"example":<Demo5 />,"title":" 多种表单元素示例","code":"/**\r\n *\r\n * @title 多种表单元素示例\r\n * @description 查询面板\r\n */\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Button, Label, Switch, Checkbox, DatePicker, Radio, Select,  Col , Row , FormControl } from 'tinper-bee';\r\n\n\n\n\n\n\n\n\n\nimport moment from \"moment/moment\";\r\nconst FormItem = Form.FormItem;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Demo5 = Form.createForm()(class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            approvalState: '',\r\n            closeState: '',\r\n            confirmState: '',\r\n            voucherDate: [],\r\n            orderTypes:[\r\n                {\r\n                    'code':'001',\r\n                    'name':'类型1'\r\n                },\r\n                {\r\n                    'code':'002',\r\n                    'name':'类型2'\r\n                },\r\n                {\r\n                    'code':'003',\r\n                    'name':'类型3'\r\n                },\r\n            ]\r\n        };\r\n    }\r\n    submit = (e) => {\r\n        this.props.form.validateFields((err, values) => {\r\n            if (err) {\r\n                console.log('校验失败', values);\r\n            } else {\r\n                console.log('提交成功', values)\r\n            }\r\n        });\r\n    }\r\n    reset = () =>{\r\n        this.props.form.resetFields();\r\n        //部分表单元素无法通过this.props.form.resetFields重置，需要手动重置，如下\r\n        this.setState({\r\n            approvalState: '',\r\n            closeState: '',\r\n            confirmState: '',\r\n            voucherDate: []\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        const self = this;\r\n        return (\r\n            <div>\r\n                <Form className='demo5'>\r\n                <Row>\r\n                        <Col lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>订单编号</Label>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('orderCode', {\r\n                                        initialValue: '',\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>供应商名称</Label>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('supplierName', {\r\n                                        initialValue: '',\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col lg={4} md={6} xs={4}>\r\n                            <FormItem>\r\n                                <Label className='time'>凭证日期</Label>\r\n                                <RangePicker\r\n                                    defaultValue={this.state.voucherDate}\r\n                                    placeholder={'开始 ~ 结束'}\r\n                                    dateInputPlaceholder={['开始', '结束']}\r\n                                    {\r\n                                    ...getFieldProps('voucherDate', {\r\n                                        onChange: function (v) {\r\n                                            self.setState({\r\n                                                voucherDate: v\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>订单类型</Label>\r\n                                <Select {\r\n                                    ...getFieldProps('type', {\r\n                                        initialValue: '',\r\n                                    }\r\n                                    )}>\r\n                                    <Option value=\"\">请选择</Option>\r\n                                    {\r\n                                        self.state.orderTypes.map((item, index) => {\r\n                                            return (\r\n                                                <Option key={index} value={item.code}>{item.name}</Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>采购组</Label>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('purchasingGroup', {\r\n                                        initialValue: '',\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>审批状态</Label>\r\n                                <Radio.RadioGroup\r\n                                    selectedValue={this.state.approvalState}\r\n                                    {\r\n                                    ...getFieldProps('approvalState', {\r\n                                        initialValue: '1',\r\n                                        onChange(value) {\r\n                                            self.setState({ approvalState: value });\r\n                                        },\r\n                                    }\r\n                                    )}\r\n                                >\r\n                                    <Radio value=\"0\" >未审批</Radio>\r\n                                    <Radio value=\"1\" >已审批</Radio>\r\n                                </Radio.RadioGroup>\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>关闭状态</Label>\r\n                                <Radio.RadioGroup\r\n                                    selectedValue={this.state.closeState}\r\n                                    {\r\n                                    ...getFieldProps('closeState', {\r\n                                        initialValue: '1',\r\n                                        onChange(value) {\r\n                                            self.setState({ closeState: value });\r\n                                        },\r\n                                    }\r\n                                    )}\r\n                                >\r\n                                    <Radio value=\"0\" >未关闭</Radio>\r\n                                    <Radio value=\"1\" >已关闭</Radio>\r\n                                </Radio.RadioGroup>\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col  lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>确认状态</Label>\r\n                                <Radio.RadioGroup\r\n                                    selectedValue={this.state.confirmState}\r\n                                    {\r\n                                    ...getFieldProps('confirmState', {\r\n                                        initialValue: '1',\r\n                                        onChange(value) {\r\n                                            self.setState({ confirmState: value });\r\n                                        },\r\n                                    }\r\n                                    )}\r\n                                >\r\n                                    <Radio value=\"0\" >未确认</Radio>\r\n                                    <Radio value=\"1\" >已确认</Radio>\r\n                                </Radio.RadioGroup>\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className='submit'>\r\n                        <Button shape=\"border\" className=\"reset\" onClick={this.reset}>重置</Button>\r\n                        <Button colors=\"primary\" className=\"login\" onClick={this.submit}>查询</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n","desc":" 查询面板","scss_code":".demo5 {\r\n    background: rgb(247, 249, 251);\r\n    padding: 11px 24px;\r\n    .submit{\r\n        padding-left:90px\r\n    }\r\n    .reset{\r\n        margin-right:10px;\r\n    }\r\n    .u-form-item {\r\n        min-width: 100%;\r\n        min-height: 50px!important;\r\n        padding: 0;\r\n        .u-label{\r\n            min-width: 90px;\r\n            display: inline-block;\r\n            text-align:right;\r\n            padding-right: 12px;\r\n        }\r\n        .u-label.time{\r\n            position: relative;\r\n            bottom: 10px;\r\n        }\r\n        .u-label + *{\r\n            min-width: 200px;\r\n            display: inline-block;\r\n        }\r\n        .datepicker-input-group{\r\n            .u-input-group-btn{\r\n                .uf-calendar{\r\n                    padding: 0;\r\n                }\r\n            }\r\n        }\r\n        .u-switch{\r\n            min-width: auto;\r\n        }\r\n        .u-select{\r\n            width: auto;\r\n        }\r\n        .u-form-control{\r\n            width: auto;\r\n        }\r\n        .calendar-picker{\r\n            display: inline-block;\r\n            min-width:200px;\r\n            width: auto;\r\n            input{\r\n                width: 100%;\r\n                text-align: center;\r\n            }\r\n        }\r\n        .u-radio .u-radio-label{\r\n            font-size:14px;\r\n        }\r\n    }\r\n}\r\n"},{"example":<Demo6 />,"title":" 多种布局示例","code":"/**\r\n *\r\n * @title 多种布局示例\r\n * @description \r\n */\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Button, Label, Switch, Checkbox, DatePicker, Radio, Select,  Col , Row , FormControl } from 'tinper-bee';\r\n\n\n\n\n\n\n\n\n\nimport moment from \"moment/moment\";\r\nconst FormItem = Form.FormItem;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Demo6 = Form.createForm()(class Demo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            approvalState: '',\r\n            closeState: '',\r\n            confirmState: '',\r\n            voucherDate: [],\r\n            orderTypes:[\r\n                {\r\n                    'code':'001',\r\n                    'name':'类型1'\r\n                },\r\n                {\r\n                    'code':'002',\r\n                    'name':'类型2'\r\n                },\r\n                {\r\n                    'code':'003',\r\n                    'name':'类型3'\r\n                },\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        const self = this;\r\n        const orderTypes= [{\r\n            \"code\":\"D001\",\r\n            \"name\":\"D001\"\r\n          },{\r\n            \"code\":\"D002\",\r\n            \"name\":\"D002\"\r\n          },{\r\n            \"code\":\"D003\",\r\n            \"name\":\"D003\"\r\n          },{\r\n            \"code\":\"D004\",\r\n            \"name\":\"D004\"\r\n          }];\r\n        return (\r\n            <div>\r\n                <Form className='demo6'>\r\n                    {/* 普通栅格布局 */}\r\n                    <h4>\r\n                        普通栅格布局\r\n                    </h4>\r\n                    <Row className = 'edit-panel'>\r\n                        <Col lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>订单编号\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('orderCode1', {\r\n                                        initialValue: '',\r\n                                        rules: [{\r\n                                            required: true, message: '请输入订单编号',\r\n                                        }],\r\n                                    })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('orderCode1')\r\n                                    }\r\n                                </span>\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label>供应商名称\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                                <FormControl\r\n                                    {\r\n                                        ...getFieldProps('supplierName1', {\r\n                                            initialValue: '',\r\n                                            rules: [{\r\n                                                required: true, message: '请输入供应商名称',\r\n                                            }],\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('supplierName1')\r\n                                    }\r\n                                </span>\r\n                            </FormItem>\r\n                            \r\n                        </Col>\r\n                        <Col lg={4} md={6} xs={12}>\r\n                            <FormItem>\r\n                                <Label className='time'>凭证日期</Label>\r\n                                <RangePicker\r\n                                    defaultValue={this.state.voucherDate}\r\n                                    placeholder={'开始 ~ 结束'}\r\n                                    dateInputPlaceholder={['开始', '结束']}\r\n                                    {\r\n                                    ...getFieldProps('voucherDate1', {\r\n                                        onChange: function (v) {\r\n                                            self.setState({\r\n                                                voucherDate1: v\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <div className='split'></div>\r\n                    \r\n                    \r\n                     {/* 单列铺满 */}\r\n                     <h4>\r\n                        单列铺满\r\n                     </h4>\r\n                     <Row className = 'edit-panel edit-panel-all'>\r\n                        <FormItem>\r\n                            <Col md={2}>\r\n                                <Label>订单编号\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('orderCode2', {\r\n                                        initialValue: '',\r\n                                        rules: [{\r\n                                            required: true, message: '请输入订单编号',\r\n                                        }],\r\n                                    })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('orderCode2')\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                        </FormItem>\r\n\r\n                        <FormItem>\r\n                            <Col md={2}>\r\n                                <Label>供应商名称\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <FormControl\r\n                                    {\r\n                                        ...getFieldProps('supplierName2', {\r\n                                            initialValue: '',\r\n                                            rules: [{\r\n                                                required: true, message: '请输入供应商名称',\r\n                                            }],\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('supplierName2')\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                        </FormItem>\r\n\r\n                        <FormItem>\r\n                            <Col md={2}>\r\n                                <Label>凭证日期</Label>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <RangePicker\r\n                                    defaultValue={this.state.voucherDate}\r\n                                    placeholder={'开始 ~ 结束'}\r\n                                    dateInputPlaceholder={['开始', '结束']}\r\n                                    {\r\n                                    ...getFieldProps('voucherDate2', {\r\n                                        onChange: function (v) {\r\n                                            self.setState({\r\n                                                voucherDate2: v\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Col md={2}>\r\n                                <Label>订单类型</Label>\r\n                            </Col>\r\n                            <Col md={10}>\r\n                                <Select {\r\n                                    ...getFieldProps('type', {\r\n                                        initialValue: '',\r\n                                    }\r\n                                    )}>\r\n                                    <Option value=\"\">请选择</Option>\r\n                                    {\r\n                                        orderTypes.map((item, index) => {\r\n                                            return (\r\n                                                <Option key={index} value={item.code}>{item.name}</Option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Col>\r\n                        </FormItem>\r\n                        \r\n                    </Row>\r\n\r\n                    <div className='split'></div>\r\n\r\n                    {/* 单列居中 */}\r\n                    <h4>\r\n                        单列居中\r\n                     </h4>\r\n                    <Row className = 'edit-panel edit-panel-center'>\r\n                        <Col md={12} >\r\n                            <FormItem>\r\n                                <Label>订单编号\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('orderCode3', {\r\n                                        initialValue: '',\r\n                                        rules: [{\r\n                                            required: true, message: '请输入订单编号',\r\n                                        }],\r\n                                    })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('orderCode3')\r\n                                    }\r\n                                </span>\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col md={12}  >\r\n                            <FormItem>\r\n                                <Label>供应商名称\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                                <FormControl\r\n                                    {\r\n                                        ...getFieldProps('supplierName3', {\r\n                                            initialValue: '',\r\n                                            rules: [{\r\n                                                required: true, message: '请输入供应商名称',\r\n                                            }],\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('supplierName3')\r\n                                    }\r\n                                </span>\r\n                            </FormItem>\r\n                            \r\n                        </Col>\r\n                        <Col md={12}  >\r\n                            <FormItem>\r\n                                <Label className='time'>凭证日期</Label>\r\n                                <RangePicker\r\n                                    defaultValue={this.state.voucherDate}\r\n                                    placeholder={'开始 ~ 结束'}\r\n                                    dateInputPlaceholder={['开始', '结束']}\r\n                                    {\r\n                                    ...getFieldProps('voucherDate3', {\r\n                                        onChange: function (v) {\r\n                                            self.setState({\r\n                                                voucherDate3: v\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </FormItem>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n\r\n                     <div className='split'></div>\r\n\r\n                    {/* 三列带textarea */}\r\n                    <h4>\r\n                    三列带textarea\r\n                     </h4>\r\n                    <Row className = 'edit-panel edit-panel-textarea'>\r\n                            <Col md={1}>\r\n                                <Label>订单编号\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <FormControl\r\n                                    {\r\n                                    ...getFieldProps('orderCode4', {\r\n                                        initialValue: '',\r\n                                        rules: [{\r\n                                            required: true, message: '请输入订单编号',\r\n                                        }],\r\n                                    })\r\n                                    }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('orderCode4')\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Label>供应商\r\n                                    <span className='mast'>*</span>\r\n                                </Label>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                            <FormControl\r\n                                {\r\n                                    ...getFieldProps('supplierName4', {\r\n                                        initialValue: '',\r\n                                        rules: [{\r\n                                            required: true, message: '请输入供应商名称',\r\n                                        }],\r\n                                    })\r\n                                }\r\n                                />\r\n                                <span className='error'>\r\n                                    {\r\n                                        getFieldError('supplierName4')\r\n                                    }\r\n                                </span>\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Label className='time'>凭证日期</Label>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                            <RangePicker\r\n                                    defaultValue={this.state.voucherDate}\r\n                                    placeholder={'开始 ~ 结束'}\r\n                                    dateInputPlaceholder={['开始', '结束']}\r\n                                    {\r\n                                    ...getFieldProps('voucherDate4', {\r\n                                        onChange: function (v) {\r\n                                            self.setState({\r\n                                                voucherDate3: v\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Label className='time'>备注</Label>\r\n                            </Col>\r\n                            <Col md={11}>\r\n                            <textarea className='u-form-control'\r\n                                {\r\n                                    ...getFieldProps('mark', {\r\n                                        initialValue: '',\r\n                                    })\r\n                                }\r\n                                />\r\n                            </Col>\r\n\r\n                       \r\n                    </Row>\r\n                    \r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n","desc":" ","scss_code":".demo6 {\r\n    .edit-panel {\r\n        background: #FFF;\r\n        padding: 15px 15px 15px 15px;\r\n        .reset-btn,\r\n        .reset-btn:hover {\r\n            background: #fff;\r\n            border: 1px solid #1E7BE2;\r\n            color: #1E7BE2;\r\n            margin-right: 15px;\r\n        }\r\n        .submit-btn,\r\n        .submit-btn:hover {\r\n            background: #1E7BE2;\r\n            color: #fff;\r\n        }\r\n        .btn-group {\r\n            text-align: right;\r\n        }\r\n        .u-form-item {\r\n            min-width: 100%;\r\n            margin-bottom: 10px;\r\n            min-height: 50px!important;\r\n            .error {\r\n                margin-left: 100px;\r\n                color: red;\r\n                display: block;\r\n            }\r\n            .u-label {\r\n                // min-width: 100px;\r\n                display: inline-block;\r\n                padding-right: 12px;\r\n            }\r\n            .u-label.time {\r\n                position: relative;\r\n                bottom: 10px;\r\n            }\r\n            .u-label+* {\r\n                min-width: 200px;\r\n                display: inline-block;\r\n            }\r\n            .mast {\r\n                width: 5px;\r\n                min-width: auto;\r\n                margin-left: 4px;\r\n                color: red;\r\n            }\r\n            .datepicker-input-group {\r\n                .u-input-group-btn {\r\n                    .uf-calendar {\r\n                        padding: 0;\r\n                    }\r\n                }\r\n            }\r\n            .u-switch {\r\n                min-width: auto;\r\n            }\r\n            .u-select {\r\n                width: auto;\r\n            }\r\n            .u-form-control {\r\n                width: auto;\r\n            }\r\n            .calendar-picker {\r\n                display: inline-block;\r\n                min-width: 200px;\r\n                width: auto;\r\n                input {\r\n                    width: 100%;\r\n                }\r\n            }\r\n            .u-form-control-close {\r\n                width: auto;\r\n                .u-form-control {\r\n                    width: 100%\r\n                }\r\n            }\r\n        }\r\n        .search-panel-btn {\r\n            text-align: right;\r\n            padding: 10px 0;\r\n        }\r\n    }\r\n    .edit-panel-center {\r\n        text-align: center;\r\n        .u-form-item {\r\n            min-width: auto;\r\n            display: inline-block;\r\n            .error {\r\n                text-align: left;\r\n            }\r\n        }\r\n    }\r\n    .edit-panel-all {\r\n        .u-form-item {\r\n            padding: 0;\r\n            .u-label {\r\n                width: 100%;\r\n                text-align: right;\r\n                height: 30px;\r\n                line-height: 30px;\r\n            }\r\n            .u-form-control {\r\n                width: 100%;\r\n            }\r\n            .calendar-picker {\r\n                width: 100%;\r\n                position: relative;\r\n            }\r\n            .u-select {\r\n                width: 100%;\r\n            }\r\n            .error {\r\n                margin-left: 0;\r\n            }\r\n        }\r\n    }\r\n    .split {\r\n        height: 1px;\r\n        background: #e0e0e0;\r\n    }\r\n    .edit-panel-textarea {\r\n        >div {\r\n            padding: 0;\r\n            margin-bottom: 10px;\r\n            min-height: 50px;\r\n            .u-label {\r\n                height: 30px;\r\n                line-height: 30px;\r\n                text-align: right;\r\n                display: block;\r\n            }\r\n            .error {\r\n                margin-left: 100px;\r\n                color: red;\r\n                display: block;\r\n            }\r\n            .mast {\r\n                color: red;\r\n            }\r\n            textarea {\r\n                width: 100%;\r\n                resize: none;\r\n                min-height: 50px;\r\n            }\r\n            .calendar-picker,\r\n            .u-select {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n}"}]


class Demo extends Component {
    constructor(props){
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }
    handleClick() {
        this.setState({ open: !this.state.open })
    }

    render () {
        const { title, example, code, desc, scss_code  } = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const header = (
            <div>
                {example}
                <Button style={{"marginTop": "10px"}} shape="block" onClick={ this.handleClick }>
                    { caret }
                    { text }
                </Button>
            </div>
        );
        return (
            <Col md={12} id={title.trim()} >
                <h3>{ title }</h3>
                <p>{ desc }</p>
                <Panel collapsible headerContent expanded={ this.state.open } colors='bordered' header={ header } footerStyle = {{padding: 0}}>
                    <pre><code className="hljs javascript">{ code }</code></pre>
                    { !!scss_code ? <pre><code className="hljs css">{ scss_code }</code></pre> : null }
                </Panel>
            </Col>
        )
    }
}

class DemoGroup extends Component {
    constructor(props){
        super(props)
    }
    render () {
        return (
                <Row>
                    {DemoArray.map((child,index) => {

                        return (
                            <Demo example= {child.example} title= {child.title} code= {child.code} scss_code= {child.scss_code} desc= {child.desc} key= {index}/>
                        )

                    })}
                </Row>
        )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));
